import{s as Y,e as c,a as u,H as Q,c as l,m as k,g as i,b as z,v as X,f as e,r as H,i as a,n as D,l as an,h as sn}from"../chunks/scheduler.U_2hvb7C.js";import{S as Z,i as nn,c as on,a as pn,m as cn,t as ln,b as rn,d as un}from"../chunks/index.BoCreYX2.js";function dn(U){let s,m="Write a plugin for another framework",d,p,f='Gardenjs currently supports <a href="https://github.com/gardenjs/render-plugin-svelte" target="_blank" title="Go to the Svelte renderer Repository">Svelte</a>, <a href="https://github.com/gardenjs/render-plugin-vue" target="_blank" title="Go to the Vue renderer Repository">Vue</a> and <a href="https://github.com/gardenjs/render-plugin-react" target="_blank" title="Go to the React renderer Repository">React</a> - also in multi-framework projects. In order to make Gardenjs compatible with other frameworks and template languages, a corresponding render must be added as a plugin.',o,r,C="A renderer must export a <code>create</code> function which returns an object with two functions: <code>destroy</code> and <code>updateComponent</code>. The <code>updateComponent</code> function accepts an object with following properties:",j,h,B="<li><code>component</code>: Component, the component which should be rendered.</li> <li><code>decorators</code>: A list of decorator components, which are rendered recursively, and the component must be rendered inside.</li> <li><code>selectedExample</code>: Object, configured in the das file. It contains the input parameters for the component</li> <li><code>afterRenderHook</code>: Function, this function must be called after the component is mounted</li>",T,v,L,en=`<code class="language-js"><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
<span class="token comment">// optional create render component and mount to #garden_app</span>
<span class="token comment">// alternatively inside updateComponent</span>
<span class="token operator">...</span>custom code<span class="token operator">...</span>

    <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>
      <span class="token function-variable function">destroy</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
        <span class="token comment">// unmount render component</span>
        <span class="token operator">...</span>custom code<span class="token operator">...</span>
      <span class="token punctuation">&#125;</span>
      <span class="token function-variable function">updateComponent</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
        <span class="token comment">// reset app and render new component</span>
        <span class="token comment">// or just unmount app and create new app with new component</span>
        <span class="token comment">// pass the afterRenderHook, decorators and props to the render component</span>
        <span class="token operator">...</span>custom code<span class="token operator">...</span>
      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
    <span class="token punctuation">&#125;</span>

<span class="token punctuation">&#125;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">&#123;</span> create <span class="token punctuation">&#125;</span>
</code>`,M,w,W="It is often efficient enough and causes fewer errors to destroy the app and recreate and remount inside <code>updateComponent</code>.",R,_,F="The render component is responsible for calling the <code>afterRenderHook</code> function and embedding the component within the decorators.",P,g,J="Normally this can be done by recursively calling the render component. Usually, each frontend framework has a special component tag to create a component dynamically, e.g. Svelte has <code>&lt;svelte:component&gt;</code> and React has <code>&lt;DynamicComponent&gt;</code>",$,y,E,tn=`<code class="language-jsx"><span class="token keyword">let</span> props <span class="token comment">//passed from outside</span>

<span class="token function">onMount</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
  props<span class="token punctuation">.</span><span class="token function">afterRenderHook</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">&#125;</span></span><span class="token punctuation">)</span>

<span class="token punctuation">&#123;</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>props<span class="token punctuation">.</span>decorators<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#125;</span>

  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">framework:</span><span class="token class-name">Component</span></span> <span class="token attr-name">component</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>decorators[0]</span><span class="token punctuation">></span></span><span class="token plain-text">
    &lt;framework:Component component=self </span><span class="token punctuation">&#123;</span><span class="token operator">...</span>props<span class="token punctuation">,</span> <span class="token literal-property property">decorators</span><span class="token operator">:</span> decorator<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">/</span><span class="token operator">></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">framework:</span><span class="token class-name">Component</span></span><span class="token punctuation">></span></span>

<span class="token punctuation">&#123;</span> <span class="token keyword">else</span> <span class="token punctuation">&#125;</span>

  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">framework:</span><span class="token class-name">Component</span></span> <span class="token attr-name">component</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>props.component</span> <span class="token spread"><span class="token punctuation">&#123;</span><span class="token operator">...</span>props<span class="token punctuation">&#125;</span></span> <span class="token punctuation">/></span></span>

<span class="token punctuation">&#123;</span> end <span class="token punctuation">&#125;</span></code>`,G,S,q,b,N="Also take a look at how the existing renderers solve this…",A,I,V,x,O="<strong>Let us know if you have written a new renderer for another framework. We will be happy to refer to it.</strong>";return{c(){s=c("h1"),s.textContent=m,d=u(),p=c("p"),p.innerHTML=f,o=u(),r=c("p"),r.innerHTML=C,j=u(),h=c("ul"),h.innerHTML=B,T=u(),v=c("pre"),L=new Q(!1),M=u(),w=c("p"),w.innerHTML=W,R=u(),_=c("p"),_.innerHTML=F,P=u(),g=c("p"),g.innerHTML=J,$=u(),y=c("pre"),E=new Q(!1),G=u(),S=c("br"),q=u(),b=c("p"),b.textContent=N,A=u(),I=c("br"),V=u(),x=c("p"),x.innerHTML=O,this.h()},l(n){s=l(n,"H1",{"data-svelte-h":!0}),k(s)!=="svelte-12lc4eb"&&(s.textContent=m),d=i(n),p=l(n,"P",{"data-svelte-h":!0}),k(p)!=="svelte-hi27kz"&&(p.innerHTML=f),o=i(n),r=l(n,"P",{"data-svelte-h":!0}),k(r)!=="svelte-ptcijg"&&(r.innerHTML=C),j=i(n),h=l(n,"UL",{"data-svelte-h":!0}),k(h)!=="svelte-iqy8ws"&&(h.innerHTML=B),T=i(n),v=l(n,"PRE",{class:!0});var t=z(v);L=X(t,!1),t.forEach(e),M=i(n),w=l(n,"P",{"data-svelte-h":!0}),k(w)!=="svelte-nd0ckc"&&(w.innerHTML=W),R=i(n),_=l(n,"P",{"data-svelte-h":!0}),k(_)!=="svelte-1dezqja"&&(_.innerHTML=F),P=i(n),g=l(n,"P",{"data-svelte-h":!0}),k(g)!=="svelte-1caukun"&&(g.innerHTML=J),$=i(n),y=l(n,"PRE",{class:!0});var K=z(y);E=X(K,!1),K.forEach(e),G=i(n),S=l(n,"BR",{}),q=i(n),b=l(n,"P",{"data-svelte-h":!0}),k(b)!=="svelte-oei040"&&(b.textContent=N),A=i(n),I=l(n,"BR",{}),V=i(n),x=l(n,"P",{"data-svelte-h":!0}),k(x)!=="svelte-6vgtwq"&&(x.innerHTML=O),this.h()},h(){L.a=null,H(v,"class","language-js"),E.a=null,H(y,"class","language-jsx")},m(n,t){a(n,s,t),a(n,d,t),a(n,p,t),a(n,o,t),a(n,r,t),a(n,j,t),a(n,h,t),a(n,T,t),a(n,v,t),L.m(en,v),a(n,M,t),a(n,w,t),a(n,R,t),a(n,_,t),a(n,P,t),a(n,g,t),a(n,$,t),a(n,y,t),E.m(tn,y),a(n,G,t),a(n,S,t),a(n,q,t),a(n,b,t),a(n,A,t),a(n,I,t),a(n,V,t),a(n,x,t)},p:D,i:D,o:D,d(n){n&&(e(s),e(d),e(p),e(o),e(r),e(j),e(h),e(T),e(v),e(M),e(w),e(R),e(_),e(P),e(g),e($),e(y),e(G),e(S),e(q),e(b),e(A),e(I),e(V),e(x))}}}class kn extends Z{constructor(s){super(),nn(this,s,null,dn,Y,{})}}function mn(U){let s,m,d,p,f;return p=new kn({}),{c(){s=c("meta"),m=u(),d=c("div"),on(p.$$.fragment),this.h()},l(o){const r=an("svelte-88jo2b",document.head);s=l(r,"META",{name:!0,content:!0}),r.forEach(e),m=i(o),d=l(o,"DIV",{class:!0});var C=z(d);pn(p.$$.fragment,C),C.forEach(e),this.h()},h(){document.title="Add frameworks :: Gardenjs Docs",H(s,"name","description"),H(s,"content","How to add other frameworks to gardenjs. Gardenjs is the fast component UI explorer for JavaScript frameworks like Svelte, Vue and React."),H(d,"class","md_file")},m(o,r){sn(document.head,s),a(o,m,r),a(o,d,r),cn(p,d,null),f=!0},p:D,i(o){f||(ln(p.$$.fragment,o),f=!0)},o(o){rn(p.$$.fragment,o),f=!1},d(o){o&&(e(m),e(d)),e(s),un(p)}}}class vn extends Z{constructor(s){super(),nn(this,s,null,mn,Y,{})}}export{vn as component};
